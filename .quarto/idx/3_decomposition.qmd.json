{"title":"Decomposition","markdown":{"headingText":"Decomposition","containsRefs":false,"markdown":"\nIn this chapter we will consider different adjusments and transformations one can do prior to a model task. Then we move on to techniques for decomposing a time series into a trend-cycle, season and remainder component.\n\n```{r}\n#| message: false\n#| warning: false\n#| echo: false\n#| eval: true\nlibrary(lubridate)\nlibrary(tidyverse)\nlibrary(fpp3)\ntheme_set(\n  theme_bw() + \n    theme(panel.grid.minor = element_blank(),\n          panel.grid.major = element_blank(),\n          strip.background = element_rect(fill = \"white\", color = \"transparent\"))\n)\n\n```\n\n## Calender adjustments {.unnumbered}\n\n<iframe src=\"https://player.vimeo.com/video/765626935?h=ead0e1cf78\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\nIn the example in the video above, we are not interested in a proxy for working days per month, and to avoid the effect of this we use the mean (average) production per working day within each month instead of total production per month. The code to generate the example can be found below:\n\n```{r, message = FALSE, warning =FALSE}\n#| echo: true\n#| eval: false\n#| code-fold: true\n#| code-overflow: wrap\n#| code-summary: \"Code for generating examples:\"\nlibrary(lubridate)\nlibrary(tidyverse)\nlibrary(fpp3)\n\n# ggplot theme:\ntheme_set(\n  theme_bw() + \n    theme(panel.grid.minor = element_blank(),\n          panel.grid.major = element_blank())\n)\n\n# Daily production: \ndat <- tibble(\n  date = seq(as.Date(\"2015-01-01\"), as.Date(\"2019-12-31\"), by = \"1 day\"),\n  price = pi\n) %>% \n  #Removing the weekends:\n  filter(wday(date, week_start = 1) %in% 1:5) %>%  \n  #Note: We do not remove public holidays, and the worker never takes a day off\n  mutate(YearMonth = yearmonth(date))\n\n# -- TOTAL PRODUCTION FIGURE --\ndat %>%\n  group_by(YearMonth) %>%\n  summarize(`Total production` = sum(price)) %>%\n  as_tsibble(index = \"YearMonth\") %>% \n  ggplot(aes(x = YearMonth, \n             y = `Total production`)) + \n  geom_point(color = \"skyblue\") + \n  geom_line(color = \"skyblue\") + \n  scale_y_continuous(breaks = seq(60, 100, 5),\n                     labels = paste0(\"$\",seq(60, 100, 5),\"k\"), \n                     limits = c(60,75))\n# -- MEAN PRODUCTION FIGURE --\ndat %>% group_by(YearMonth) %>%\n  summarize(`Mean production` = mean(price)) %>%\n  as_tsibble(index = \"YearMonth\") %>% \n  ggplot(aes(x = YearMonth, \n             y = `Mean production`)) + \n  geom_point(color = \"skyblue\") + \n  geom_line(color=\"skyblue\")+ \n  scale_y_continuous(breaks = seq(3, 4, .02), \n                     labels = paste0(\"$\",seq(3, 4, .02),\"k\"))\n\n```\n\n## Population adjustment {.unnumbered}\n\nAdjusting for population size is usually a good idea when studying a quantity that is affected by it. The most obvious example is to study GDP (Gross Domestic Product) per capita instead of GDP.\n\n<iframe src=\"https://player.vimeo.com/video/765733100?h=ead0e1cf78\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n```{r, message = FALSE, warning =FALSE}\n#| echo: true\n#| eval: false\n#| code-fold: true\n#| code-overflow: wrap\n#| code-summary: \"Code for generating examples in the video\"\n\n# --- Setting up the data --\nscandinaviaUSA <- global_economy %>% \n  filter(Country %in% c(\"Norway\",\"Sweden\",\"Denmark\", \"United States\"))\nscandinaviaUSA %>% head()\n\n# --- GDP by country in $US --\nscandinaviaUSA %>%\n  autoplot(GDP)+\n  labs(title= \"GDP\", y = \"$US\")\n\n# --- Population by country  --\nscandinaviaUSA %>%\n  autoplot(Population)+\n  labs(title= \"Population\", y = \"Number of people\")\n\n# --- Population by country  (log-scale on y-axis) --\nscandinaviaUSA %>% \n  autoplot(Population)+\n  scale_y_log10()+\n  labs(title= \"Population (log-scale)\",y = \"Number of people\")\n\n# --- GDP per capita by country ---\nscandinaviaUSA %>%\n  autoplot(GDP/Population) +\n  labs(title= \"GDP per capita = GDP / Population\", y = \"$US\")\n```\n\n## Inflation adjustment {.unnumbered}\n\nAdjusting for inflation is a simple way of taking into account that 5\\$ in 1950 would get you much more than 5\\$ would today. This compensation is usually done by a consumer price index, which is standardized to a specific year (in the video below we show examples with 2010 and 2015 as reference years).\n\nLet $Y_t$ denote the raw time series and $Y_t^\\star$ the inflation adjusted. Let $\\text{CPI}_t$ denote a relevant consumer price index defined to be 100 in the reference year $t^\\star$. Then $$Y_t^\\star = Y_t \\cdot \\frac{100}{\\text{CPI}_t}.$$ More generally, we can choose the reference year $t^\\star$ and write this as $$Y_t^\\star = Y_t \\cdot \\frac{\\text{CPI}_{t^\\star}}{\\text{CPI}_t}.$$\n\nThe inflation adjusted series is then measured in the unit \"year $t^\\star$-money\".\n\n<iframe src=\"https://player.vimeo.com/video/765737839?h=ead0e1cf78\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n```{r, message = FALSE, warning =FALSE}\n#| echo: true\n#| eval: false\n#| code-fold: true\n#| code-overflow: wrap\n#| code-summary: \"Code for generating examples:\"\n# --- Inflation adjusted GDP per capita by country ---\nscandinaviaUSA %>%\n  autoplot(GDP/Population *100 / CPI) +\n  labs(title= \"GDP per capita = GDP / Population\", y = \"$US\")\n\n# --- CPI FOR NORWAY (data from Statistics Norway)---\nCPI <- read.csv(\"data/CPI_norway.csv\", sep = \";\") %>% as_tibble() %>%\n  select(1:2) %>%\n  rename(Year = X,CPI = Y.avg2) %>% \n  mutate(Year = as.numeric(Year), CPI = as.numeric(CPI))%>%\n  filter(Year < 2022) %>%\n  as_tsibble(index = Year)\n\n# --- CPI figure ---\nCPI %>% \n  autoplot(CPI, color = \"blue\", lwd = 1.2) +\n  labs(title= \"Consumer Price Index\", y = \"NOK\",\n       subtitle = \"Data source: Statistics Norway\")+\n  geom_hline(yintercept = 100, lty = 2) + geom_vline(xintercept = 2015, lty = 2)+\n  scale_x_continuous(breaks = seq(1925,2025,10))+\n  scale_y_continuous(breaks = seq(0,120,10))\n\n# --- BIG MAC price index ---\nbigMac <- read_csv(\"https://raw.githubusercontent.com/TheEconomist/big-mac-data/master/output-data/big-mac-raw-index.csv\")\nnorBigMac <- bigMac %>% \n  filter(name %in% c(\"Norway\")) %>% \n  mutate(Year = lubridate::year(date)) %>%\n  as_tsibble(index = \"date\")%>%\n  filter(Year <2022) %>%\n  left_join(CPI, by = \"Year\") \n\n# --- BIG MAC price index figure ---\nnorBigMac %>% \n  autoplot(local_price) +\n  labs(title= \"Big Mac price in Norway\", y = \"NOK\",\n       subtitle = \"Data source: The Economist\") +\n  geom_smooth(method = \"lm\", se=FALSE)\n\n#--- Inflation adjusted BIG MAC price index figure ---\nnorBigMac %>%\n  mutate(cpiAdjusted =local_price / CPI * 100)  %>%\n  as_tsibble(index = date) %>%\n  autoplot(cpiAdjusted)+\n  labs(title= \"Inflation adjusted Big Mac price in Norway\", y = \"NOK (2015)\",\n       subtitle = \"Data sources: The Economist (big mac index), Statistics Norway (CPI)\") +\n  geom_smooth(method = \"lm\", se=FALSE)\n```\n\n## Mathematical Transformations {.unnumbered}\n\nIn many situations it can be necessary to do a mathematical transformation of a time series. There can be different reasons for doing so, but a main one is to make it stationary (or at least more stationary). For instance, if you see that the variation increases or decreases with the level of the series. The most common transformation (for positive time series) is probably using the logarithm. It is often effective and interpretable as changes in the log value correspond to relative changes in the original scale. We write the transformed series, $w_t$, as $w_t =\\log y_t$, where $y_t$ is the original time series.\n\nThe textbook also mentions power transformations of the form $w_t = y_t^p$ (squarte roots - $p=\\frac12$, cube roots - $p=\\frac13$, etc). These are not as common to use, but there are situations where these may be better than the logarithm.\n\nA family of transformations (including log- and a class of power transformations) is the Box-Cox transform. For any value of $\\lambda\\in \\mathbb R$, \\begin{equation*}\nw_t = \\begin{cases}\n\\log(y_t),&\\text{if }\\lambda = 0;\\\\\n(y_t^\\lambda -1)/\\lambda, &\\text{otherwise}.\n\\end{cases}\n\\end{equation*} As you can see, if $\\lambda = 0$ we have a simple natural logarithm transform. This version of the Box-Cox transform is also defined for negative values of $y_t$ as long as $\\lambda >0$.\n\nThe book has a very nice shiny app for experimenting with different values of $\\lambda$ on a time series of gas production in Australia. We have borrowed it below, but you find it also [here](https://otexts.com/fpp3/transformations.html). They write that: *\" A good value of* $\\lambda$ is one which makes the size of the seasonal variation about the same across the whole series, as that makes the forecasting model simpler.\" This pretty much sums up why one does mathematical transformations as a preprocessing step before fitting a model - it makes the model simpler.\n\n<iframe src=\"https://ebsmonash.shinyapps.io/BoxCox_fpp3/?showcase=0\" width=\"100%\" height=\"650px\" data-external=\"1\">\n\n</iframe>\n\nFor financial assets, such as stocks, it is often better to consider the returns rather than the price series. This is also a mathematical transformation and involves differencing. First order differencing means subtracting the previous observation from the present, i.e. $w_t=y_t-y_{t-1}$. Taking differences is an effective way of potentially making a non-stationary time series stationary. E.g. if a time series has a linear trend: $Y_t = \\alpha t + Z_t$, where $\\alpha$ is a real constant and $Z_t$ is a white noise, we get that $$W_t = Y_t-Y_{t-1} = \\alpha t + Z_t - \\alpha(t-1) - Z_{t-1} = Z_t-Z_{t-1} + \\alpha,$$ effectively removing the trend in the transformed series. We will return to this when considering ARIMA models.\n\nThere are different definitions of returns, but the most common ones are the standard returns, $r_t$, and log-returns, $\\textrm{lr}_t$, defined respectively by \\begin{equation*}\n\\begin{split}\nr_t &= \\frac{y_t-y_{t-1}}{y_{t-1}},\\\\\n\\textrm{lr}_t &= \\log y_t-\\log y_{t-1} = \\log\\frac{y_t}{y_{t-1}}.\n\\end{split}\n\\end{equation*} A daily return series for a stock usually has expectation close to zero and little autocorrelation, which can be convenient in many situations. However, they are typically hetereoskedastic (non-constant variance) and the squared returns are often autocorrelated. We will come back to this, when discussing volatility forecasting towards the end of the course.\n\n<details>\n\n<summary>Code on mathematical transformations</summary>\n\n```{r}\n#| message: false\n#| warning: false\n# Package for downloading stock data (primarily from Yahoo! Finance)\nlibrary(quantmod)\n\n# -- Download the data: --\ngetSymbols(\"AAPL\")\n\n# -- Extract the closing price and create a tsibble: --\nclose.price <- tibble(\n  close = as.numeric(AAPL$AAPL.Close),\n  date  = time(AAPL)\n) %>% as_tsibble(index = date) \n\n# -- Plot closing price: --\nclose.price %>% autoplot(close) +\n  labs(title = \"Apple Closing price\", \n       y     = \"US$\")\n\n# -- Adding transformations : -- \nclose.price <- close.price %>% \n  mutate(logclose  = log(close), # log-transform\n         logreturn = c(NA, diff(logclose)), # log returns\n         return    = c(NA, diff(close)/close[-nrow(close.price)]) # Returns\n         ) \n\n\n# -- Box-cox-transform --\nlambda <- close.price %>%\n  features(close, features = guerrero) %>%\n  pull(lambda_guerrero)\nclose.price <- close.price %>%\n  mutate(boxcox = box_cox(close,lambda))\nclose.price %>%\n  autoplot(boxcox) +\n  labs(y = \"\",\n       title = latex2exp::TeX(paste0(\n         \"Transformed apple closing price with $\\\\lambda$ = \",\n         round(lambda,3))))+\n  # Adding red curve with log-transform\n  geom_line(aes(y=logclose), col = 2) \n\n# -- Plotting the different transformations --\nclose.price %>%\n  pivot_longer(-date) %>% \n  autoplot(value) + \n  facet_wrap(~name, scales=\"free_y\", strip.position = \"left\")+\n  labs(title = \"Apple Closing Price transformations\") +\n  theme(strip.placement = \"outside\")\n```\n\n</details>\n\n## Time series components and Seasonal adjustment {.unnumbered}\n\n<iframe src=\"https://player.vimeo.com/video/766470965?h=ead0e1cf78\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n<details>\n\n<summary>Code on mathematical transformations</summary>\n\n```{r}\n#| echo: true\n#| eval: true\n#| warnings: false\n#| message: false\nset.seed(1344)\nlibrary(tidyverse)\nlibrary(fpp3)\ndat <- tibble(\n  date = seq(as.Date(\"2015-01-01\"), as.Date(\"2020-12-31\"), by = \"1 day\"),\n  t = 1:length(date),\n  Tt = 100+9*t/300 + .5*((t-1000)/200)^3+(.87*cos(2*pi*t/1200)+.42*sin(2*pi*t/600))*11,\n  St = (.94*cos(2*pi*t/365) -1.2*sin(2* pi*t/365))*13,\n  Rt = rnorm(length(date), sd = 15),\n  Yt = Tt + St +  Rt\n) \n\n# -- Plotting Y and its components --\ndat %>%\n  pivot_longer(cols = -c(date,t)) %>% \n  mutate(name = factor(name, levels = c(\"Yt\", \"Tt\", \"St\", \"Rt\"))) %>% # to order the panels\n  ggplot(aes(x=date, y = value, col = name)) + \n  geom_line() + facet_wrap(~name, ncol = 1, scales = \"free_y\", strip.position = \"left\") +\n  theme(strip.placement = \"outside\", axis.title = element_blank(), legend.position = \"none\")\n\n# -- Plotting seasonally adjusted Y --\nggplot(dat, aes(x = date, y = Yt-St)) + \n  geom_line() +\n  labs(title = \"Seasonally adjusted\", x = \"\")\n```\n\n</details>\n\n## Moving averages {.unnumbered}\n\n<!-- Her kommer det en video som kanskje er mer laget i onenote enn som presentasjon -->\n\n<iframe src=\"https://player.vimeo.com/video/767237684?h=ead0e1cf78\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n<details>\n\n<summary>Code</summary>\n\n```{r}\n#| echo: true\n#| eval: true\n#| warnings: false\n#| message: false\nlibrary(fpp3)\nlibrary(tidyverse)\n\n# ggplot theme: \ntheme_set(theme_bw() + \n            theme(panel.grid.major = element_blank(),\n                  panel.grid.minor = element_blank()))\n\n# -- Read in data: --\ndat <- readxl::read_excel(\n  \"data/NorwayEmployment_15-74years_bySex.xlsx\") %>%\n  as_tibble() %>%\n  mutate(Quarter = str_replace(Quarter, \"K\",\"Q\"),\n         Quarter = yearquarter(Quarter)) \nnames(dat)[3] <- \"Employed\"\n\n# -- Aggregating from Employed by sex to total --\ndat <- dat %>% \n  group_by(Quarter) %>% \n  summarize(Employed = sum(Employed)) %>%\n  as_tsibble(index = Quarter) # Time series table\ndat %>% \n  autoplot(Employed, lwd = 1, colour = \"blue\")\ndat <- dat %>%\n  mutate(\n    `12-MA` = slider::slide_dbl(Employed, mean,\n                                .before = 5, .after = 6, .complete = TRUE),\n    `2x12-MA` = slider::slide_dbl(`12-MA`, mean,\n                                  .before = 1, .after = 0, .complete = TRUE)\n  )\ndat %>%\n  ggplot(aes(x=Quarter, y =Employed))+\n  geom_line(colour = \"gray\") +\n  geom_line(aes(y = `2x12-MA`), colour = \"#D55E00\") +\n  theme_bw()+\n  labs(y = \"Persons (thousands)\",\n       title = \"Total employment in US retail\")\n```\n\n</details>\n\n## Classical decomposition {.unnumbered}\n\n<iframe src=\"https://player.vimeo.com/video/767238976?h=ead0e1cf78\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n<details>\n\n<summary>Code</summary>\n\n```{r}\n#| echo: true\n#| eval: true\n#| warnings: false\n#| message: false\ndat %>% \n  model(\n    classical_decomposition(Employed, type = \"additive\")\n  ) %>%\n  components() %>%\n  autoplot()\n```\n\n</details>\n\n## Statistics agencies: X11 and SEATS\n\n<iframe src=\"https://player.vimeo.com/video/767240975?h=ead0e1cf78\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n<details>\n\n<summary>Code</summary>\n\n```{r}\n#| echo: true\n#| eval: true\n#| warnings: false\n#| message: false\n\ndat %>% \n  model(\n    classical = classical_decomposition(Employed, \n                                        type = \"multiplicative\"),\n    x11 = X_13ARIMA_SEATS(Employed ~ x11()),\n    seats = X_13ARIMA_SEATS(Employed ~ seats())\n  ) %>%\n  components() %>% \n  mutate(random = ifelse(.model == \"classical\", \n                         random, \n                         irregular)) %>%\n  autoplot(lwd = 1)\n```\n\n</details>\n\n## STL: Seasonal and Trend decomposition using Loess {.unnumbered}\n\n<iframe src=\"https://player.vimeo.com/video/767233402?h=ead0e1cf78\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n<details>\n\n<summary>Code</summary>\n\n```{r}\n#| echo: true\n#| eval: true\n#| warnings: false\n#| message: false\ndat %>%\n  model(\n    STL0 = STL(Employed),\n    STL1 = STL(Employed ~ trend(window = 5) + # default 7\n                 season(window = 19),         # default 11\n               robust = FALSE)\n  ) %>%\n  components() %>%\n  autoplot()\n```\n\n</details>\n\n## Exercises {.unnumbered}\n\n1.  Use the global_economy data, select a country (e.g. Austria). Plot GDP, GDP per capita and GDP per capita inflation adjusted, GDP inflation adjusted.\n\n<details>\n\n<summary>Solution</summary>\n\n```{r}\n#| message: false\n#| warning: false\nlibrary(fpp3)\nlibrary(tidyverse)\ndat <- global_economy %>% \n  filter(Country == \"Austria\")\ndat %>% autoplot(GDP)\ndat %>% autoplot(GDP/Population)\ndat %>% autoplot(GDP/Population * 100/CPI)\ndat %>% autoplot(GDP * 100/CPI)\n\n```\n\n</details>\n\n2.  In the global_economy data set, the CPI has a reference year of 2010. Do the necessary changes to inflation adjust GDP per capita with 1990 as reference year.\n\n<details>\n\n<summary>Solution</summary>\n\n```{r}\nlibrary(fpp3)\nlibrary(tidyverse)\ndat <- global_economy %>% \n  filter(Country == \"Austria\")\n\n# -- Extracting the CPI in 1990: --\ncpi1990 <- dat %>% filter(Year ==1990) %>% pull(CPI)\n\n# -- Transforming such that CPI1990 is 100 in 1990: --\ndat <- dat %>% mutate(CPI1990 = CPI / cpi1990 * 100)\n\n# -- Plotting Inflation adjusted GDP per capita: --\ndat %>% autoplot(GDP/Population * 100/CPI1990) + \n  labs(y = \"Inflation adjusted GDP per capita (1990 US$)\") +\n  geom_line(aes(y= GDP/Population * 100/CPI), col = 2)\n\n# -- Comparing the two CPIs: --\ndat %>% \n  pivot_longer(cols = c(CPI,CPI1990)) %>%\n  ggplot(aes(x = Year, y = value, col = name)) + geom_line()+\n  geom_hline(yintercept = 100) +\n  scale_color_manual(values = c(\"red\",\"blue\"))+\n  geom_segment(x = 1990,xend = 1990, y = -Inf, yend =100, lty = 2, col = \"blue\")+\n  geom_segment(x = 2010,xend = 2010, y = -Inf, yend =100, lty = 2, col = \"red\")+\n  labs(title = \"Differences between CPI with reference year 1990 and 2010\",\n       y = \"Consumer Price Index\") +\n  theme(legend.title = element_blank())\n\n```\n\n</details>\n\n3.  Use the quantmod package to download data for another stock. What transformation would you prefer for this stock?\n\n4.  Use the guerrero feature to select a $\\lambda$ for the Box-Cox transformation on the data from the previous exercise.\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["style.css"],"html-math-method":"katex","output-file":"3_decomposition.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"visual","theme":["cosmo","custom.scss"],"fontsize":"1.1em","linestretch":1.7},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}